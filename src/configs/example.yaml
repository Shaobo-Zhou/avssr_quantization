defaults:
  - model: example
  - writer: wandb
  - metrics: main
  - datasets: example
  - dataloader: main
  - transforms: main
  - _self_
optimizer:
  _target_: torch.optim.AdamW
  lr: 1e-3
  weight_decay: 1e-1
lr_scheduler:
  _target_: torch.optim.lr_scheduler.ReduceLROnPlateau
  factor: 0.5
  patience: 10
  mode: "min"
loss_function:
  _target_: src.loss.AVSSRLoss
  asr_coef: 1
  ss_coef: 1
text_encoder:
  _target_: src.text_encoder.CTCTextEncoder
trainer:
  log_step: 50
  n_epochs: 100
  epoch_len: 100
  max_grad_norm: 5
  device_tensors: ["mix_audio", "s_audio", "s_video", "s_tokens_length", "s_audio_length"] # which tensors should be on device (ex. GPU)
  resume_from: null # null or path to the checkpoint dir with *.pth and config.yaml
  device: auto # device name or "auto"
  override: False # if True, will override the previous run with the same name
  monitor: "min val_ss_loss" # "off" or "max/min metric_name", i.e. our goal is to maximize/minimize metric
  save_period: 5 # checkpoint each save_period epochs in addition to the best epoch
  early_stop: ${trainer.n_epochs} # epochs for early stopping
  save_dir: "saved"
  seed: 1
  grad_accum_steps: 1
